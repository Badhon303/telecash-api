/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    distributors: Distributor;
    agents: Agent;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    distributors: DistributorsSelect<false> | DistributorsSelect<true>;
    agents: AgentsSelect<false> | AgentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'super-admin' | 'admin';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "distributors".
 */
export interface Distributor {
  id: string;
  date?: string | null;
  name: string;
  phoneNo: string;
  email: string;
  businessName: string;
  district:
    | 'bagerhat'
    | 'bandarban'
    | 'barguna'
    | 'barisal'
    | 'bhola'
    | 'bogra'
    | 'brahmanbaria'
    | 'chandpur'
    | 'chapai-nawabganj'
    | 'chattogram'
    | 'chuadanga'
    | 'comilla'
    | 'coxs-bazar'
    | 'dhaka'
    | 'dinajpur'
    | 'faridpur'
    | 'feni'
    | 'gaibandha'
    | 'gazipur'
    | 'gopalganj'
    | 'habiganj'
    | 'jamalpur'
    | 'jessore'
    | 'jhalokati'
    | 'jhenaidah'
    | 'joypurhat'
    | 'khagrachari'
    | 'khulna'
    | 'kishoreganj'
    | 'kurigram'
    | 'kushtia'
    | 'lakshmipur'
    | 'lalmonirhat'
    | 'madaripur'
    | 'magura'
    | 'manikganj'
    | 'meherpur'
    | 'moulvibazar'
    | 'munshiganj'
    | 'mymensingh'
    | 'naogaon'
    | 'narail'
    | 'narayanganj'
    | 'narsingdi'
    | 'natore'
    | 'netrokona'
    | 'nilphamari'
    | 'noakhali'
    | 'pabna'
    | 'panchagarh'
    | 'patuakhali'
    | 'pirojpur'
    | 'rajbari'
    | 'rajshahi'
    | 'rangamati'
    | 'rangpur'
    | 'satkhira'
    | 'shariatpur'
    | 'sherpur'
    | 'sirajganj'
    | 'sunamganj'
    | 'sylhet'
    | 'tangail'
    | 'thakurgaon';
  policeStation: string;
  nid: string;
  tradeLicenseNo: string;
  tradeLicenseExpiryMonth:
    | 'january'
    | 'february'
    | 'march'
    | 'april'
    | 'may'
    | 'june'
    | 'july'
    | 'august'
    | 'september'
    | 'october'
    | 'november'
    | 'december';
  tradeLicenseExpiryYear:
    | '2020'
    | '2021'
    | '2022'
    | '2023'
    | '2024'
    | '2025'
    | '2026'
    | '2027'
    | '2028'
    | '2029'
    | '2030'
    | '2031'
    | '2032'
    | '2033'
    | '2034'
    | '2035'
    | '2036'
    | '2037'
    | '2038'
    | '2039'
    | '2040'
    | '2041'
    | '2042'
    | '2043'
    | '2044'
    | '2045'
    | '2046'
    | '2047'
    | '2048'
    | '2049'
    | '2050';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agents".
 */
export interface Agent {
  id: string;
  date?: string | null;
  name: string;
  phoneNo: string;
  email: string;
  businessName: string;
  district:
    | 'bagerhat'
    | 'bandarban'
    | 'barguna'
    | 'barisal'
    | 'bhola'
    | 'bogra'
    | 'brahmanbaria'
    | 'chandpur'
    | 'chapai-nawabganj'
    | 'chattogram'
    | 'chuadanga'
    | 'comilla'
    | 'coxs-bazar'
    | 'dhaka'
    | 'dinajpur'
    | 'faridpur'
    | 'feni'
    | 'gaibandha'
    | 'gazipur'
    | 'gopalganj'
    | 'habiganj'
    | 'jamalpur'
    | 'jessore'
    | 'jhalokati'
    | 'jhenaidah'
    | 'joypurhat'
    | 'khagrachari'
    | 'khulna'
    | 'kishoreganj'
    | 'kurigram'
    | 'kushtia'
    | 'lakshmipur'
    | 'lalmonirhat'
    | 'madaripur'
    | 'magura'
    | 'manikganj'
    | 'meherpur'
    | 'moulvibazar'
    | 'munshiganj'
    | 'mymensingh'
    | 'naogaon'
    | 'narail'
    | 'narayanganj'
    | 'narsingdi'
    | 'natore'
    | 'netrokona'
    | 'nilphamari'
    | 'noakhali'
    | 'pabna'
    | 'panchagarh'
    | 'patuakhali'
    | 'pirojpur'
    | 'rajbari'
    | 'rajshahi'
    | 'rangamati'
    | 'rangpur'
    | 'satkhira'
    | 'shariatpur'
    | 'sherpur'
    | 'sirajganj'
    | 'sunamganj'
    | 'sylhet'
    | 'tangail'
    | 'thakurgaon';
  policeStation: string;
  nid: string;
  tradeLicenseNo: string;
  tradeLicenseExpiryMonth:
    | 'january'
    | 'february'
    | 'march'
    | 'april'
    | 'may'
    | 'june'
    | 'july'
    | 'august'
    | 'september'
    | 'october'
    | 'november'
    | 'december';
  tradeLicenseExpiryYear:
    | '2020'
    | '2021'
    | '2022'
    | '2023'
    | '2024'
    | '2025'
    | '2026'
    | '2027'
    | '2028'
    | '2029'
    | '2030'
    | '2031'
    | '2032'
    | '2033'
    | '2034'
    | '2035'
    | '2036'
    | '2037'
    | '2038'
    | '2039'
    | '2040'
    | '2041'
    | '2042'
    | '2043'
    | '2044'
    | '2045'
    | '2046'
    | '2047'
    | '2048'
    | '2049'
    | '2050';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'distributors';
        value: string | Distributor;
      } | null)
    | ({
        relationTo: 'agents';
        value: string | Agent;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "distributors_select".
 */
export interface DistributorsSelect<T extends boolean = true> {
  date?: T;
  name?: T;
  phoneNo?: T;
  email?: T;
  businessName?: T;
  district?: T;
  policeStation?: T;
  nid?: T;
  tradeLicenseNo?: T;
  tradeLicenseExpiryMonth?: T;
  tradeLicenseExpiryYear?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agents_select".
 */
export interface AgentsSelect<T extends boolean = true> {
  date?: T;
  name?: T;
  phoneNo?: T;
  email?: T;
  businessName?: T;
  district?: T;
  policeStation?: T;
  nid?: T;
  tradeLicenseNo?: T;
  tradeLicenseExpiryMonth?: T;
  tradeLicenseExpiryYear?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}